00:01 The most complicated method that we're going to work with
00:04 in our api is the ability to update a car.
00:08 So getting cars, pretty straightforward, creating cars somewhat involved,
00:13 but updating means we have to both get the car back
00:16 and make the changes to push it in there, so we have to be pretty careful here.
00:21 Now, the first thing that we're going to do
00:24 is we're going to use the request and we're going to go to the matchdict
00:27 and say give me the id that's in the url ,
00:29 because we're doing a put of a json body to api /auto/ car_id
00:34 so we need to know what car you are talking about;
00:37 grab that there, use the repository to make a quick check
00:40 does this car actually exist, if it doesn't,
00:42 return 404, like hey there is no car with that id.
00:46 The next thing we have to do is parse the body,
00:48 and as you saw in that last example when I made the json malformed,
00:51 that can crash, how do we know a crash,
00:55 because we got the response 400 could not parse your json ,
00:58 your body is json and that's in the except clause there,
01:01 so you want to make sure that that part goes into a try except
01:04 unless you're willing to take 500 when they send you a bad request,
01:07 which is okay, but it would be better to communicate like
01:11 the problem is on your end, not ours, so please, don't bother us.
01:14 Then, we have to actually do the work,
01:16 we're going to go update the car, and we want to return something,
01:19 so in this case, there is nothing really new about the car,
01:23 other than what they have already told us,
01:25 there is no reason to send additional data back to them
01:28 and say and here is the updated version, because guess what,
01:30 they gave us all the updates.
01:32 So , what we decided to do is return a 204 status code which means
01:35 successfully updated but no content.
01:37 So , that worked out really well,
01:39 in the case of the post, we decided to use 201 created
01:42 which is the best response for the post operation.